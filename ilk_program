# -*- coding: utf-8 -*-
"""Python_ile_Borsa

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SSup6upibVPpFi-9vUAnvbyIuNXtAOpp
"""

!pip install investpy
import investpy

# Investing.com üzerinden 'THYAO' hissesine ait verileri çekeceğiz. 

THY = investpy.get_stock_historical_data(stock="THYAO", country='Turkey', from_date='01/01/2012', to_date="18/03/2021")

THY.head() # İlk 5 satır görüntülenir. THY.head(25) ilk 25 satır görüntülenir.
#THY.tail() son 5 satır görüntülenir.

THY.info()

import matplotlib.pyplot as plt

# plt.plot(x_ekseni,y_ekseni)
plt.title("Türk Hava Yolları Hissesi (THYAO)")
plt.xlabel('2012-2021 Yılları')
plt.ylabel('Kapanış Fiyatı')
plt.plot(THY["Close"].index, THY["Close"] )
plt.show()

THY["Yüzde_değişim"] = THY["Close"].pct_change()*100
THY.tail()

# plt.plot(x_ekseni,y_ekseni)
plt.plot(THY["Yüzde_değişim"].tail(50).index, THY["Yüzde_değişim"].tail(50))
plt.show()

!pip install stockstats
from stockstats import StockDataFrame

stocks = StockDataFrame.retype(THY[["Open", "Close", "High", "Low", "Volume"]])

THY["RSI"] = stocks["rsi_14"] # 14 günlük rsi 
THY["CCI"] = stocks["cci"] # 14 günlük cci
THY["boll"] = stocks['boll'] # merkez bollinger 
THY["boll_ub"] = stocks['boll_ub'] # taban bollinger
THY["boll_lb"] = stocks['boll_lb'] # tavan bollinger
THY["ATR"] = stocks['atr'] # Ortalama Gerçek Aralık
THY["MACD"] = stocks['macd'] # Macd 
THY["MACDS"] = stocks['macds'] # Macd sinyal
THY["kdjk"] = stocks['kdjk'] # KDJ 
THY["kdjd"] = stocks['kdjd']
THY["kdjj"] = stocks['kdjj']
THY.tail()

THY.info()

THY = THY.dropna()
THY.info()

THY= THY.drop("Open",axis=1)
THY= THY.drop("High",axis=1)
THY= THY.drop("Low",axis=1)
THY= THY.drop("Currency",axis=1)

import seaborn as sns

corr = THY.corr()
sns.heatmap(corr, xticklabels=corr.columns.values, yticklabels=corr.columns.values)

# plt.plot(x_ekseni,y_ekseni)
plt.figure(figsize=[30,10])
plt.title("Türk Hava Yolları Hissesi (THYAO)")
plt.xlabel('50 Gün')
plt.ylabel('Fiyat(TL)')
plt.plot(THY["Close"].tail(50).index, THY["Close"].tail(50) ,color ="r",label="Kapanış Fiyatı")
plt.plot(THY["boll_ub"].tail(50).index, THY["boll_ub"].tail(50) ,color ="b",label="Boll Yüksek")
plt.plot(THY["boll"].tail(50).index, THY["boll"].tail(50) ,color ="y", label="Boll Orta")
plt.plot(THY["boll_lb"].tail(50).index, THY["boll_lb"].tail(50) ,color ="g",label="Boll Düşük")
plt.legend()
plt.show()

f,ax=plt.subplots(3,1,figsize=(16,16))

THY["Close"].tail(200).plot(ax = ax[0],color ="r",label="Kapanış Fiyatı")
THY["boll_ub"].tail(200).plot(ax = ax[0],color ="b",label=" Boll Yüksek")
THY["boll"].tail(200).plot(ax = ax[0],color ="y",label=" Boll Orta")
THY["boll_lb"].tail(200).plot(ax = ax[0],color ="g",label=" Boll Düşük")
ax[0].legend()
ax[0].set_title('THYAO')
ax[0].set_xlabel('')
ax[0].set_ylabel('Tutar (TL)')

THY["ATR"].tail(200).plot(ax = ax[1],color ="cyan",label="ATR")
ax[1].legend()

THY["Volume"].tail(200).plot(ax = ax[2],color ="r",label="Volume")
ax[2].legend()

THY["Alarm"] ="No Data"

for i in range(len(THY.index)):
    THY["Alarm"][i] = THY["boll"][i-1] > THY["Close"][i-1] and THY["boll"][i] < THY["Close"][i]
    
THY["Alarm"].tail(50)

if THY["Alarm"][-1] == True : # Son gün bir alarm var mı ?
    mail_icerigi="Alarm Bulundu!"
    print("Ok")
else :
    mail_icerigi="Alarm Yok!"

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

#The mail addresses and password
sender_address = 'xxxxxxx@gmail.com'
sender_pass = 'xxxxxxx'
receiver_address = 'xxxxxxx@gmail.com'
#Setup the MIME
message = MIMEMultipart()
message['From'] = sender_address
message['To'] = receiver_address
message['Subject'] = 'Hisse Alarmı'   #Mail Konusu
#The body and the attachments for the mail
message.attach(MIMEText(mail_icerigi, 'plain'))
#Create SMTP session for sending the mail
session = smtplib.SMTP('smtp.gmail.com', 587) #use gmail with port
session.starttls() #enable security
session.login(sender_address, sender_pass) #login with mail_id and password
text = message.as_string()
session.sendmail(sender_address, receiver_address, text)
session.quit()
print('Mail Sent')
